openapi: '3.0.0'
info:
  version: "1.0.0"
  title: "ElderTech"
  license:
    name: "MIT"
servers:
  - url: /api/v1
security:
  - bearerAuth: [ ]
paths:

  /auth/sign-in:
    post:
      operationId: SignIn
      description: Sign in
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
                - password
              properties:
                phone:
                  type: string
                password:
                  type: string
      responses:
        400:
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        200:
          description: Sign in response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInResponse'
  /auth/sign-up:
    post:
      description: Sign up
      operationId: SignUp
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - phone
                - password
              properties:
                name:
                  type: string
                surname:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        200:
          description: Sign up response

  /users/{id}:
    parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
          format: int64
    patch:
      tags:
        - Users
      operationId: UpdateUser
      description: Update user
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - phone
              properties:
                name:
                  type: string
                surname:
                  type: string
                patronymic:
                  type: string
                age:
                  type: integer
                  format: int16
                gender:
                  type: integer
                  format: int16
                role:
                  type: integer
                  format: int16
                phone:
                  type: string
                email:
                  type: string
        required: true
      responses:
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        200:
          description: OK
    get:
      tags:
        - Users
      operationId: GetUser
      description: Get user by ID.
      responses:
        200:
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: "Error response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      description: Error
      type: object
      required:
        - message
        - slug
      properties:
        message:
          type: string
        slug:
          type: string

    User:
      type: object
      required:
        - id
        - name
        - phone
        - created_at
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        surname:
          type: string
        patronymic:
          type: string
        age:
          type: integer
          format: int16
        gender:
          type: integer
          format: int16
        phone:
          type: string
        role:
          type: integer
          format: int16
        email:
          type: string
        image_id:
          type: integer
          format: int64
        created_at:
          $ref: "#/components/schemas/Timestamp"
        lastOnline:
          $ref: "#/components/schemas/Timestamp"

    Timestamp:
      type: string
      format: date-time
      description: A timestamp representing a date and time in RFC3339 format

    SignInResponse:
      type: object
      required:
        - token
        - name
        - type
        - id
      properties:
        token:
          type: string
          format: jwt
        id:
          type: integer
          format: int64
        name:
          type: string
        surname:
          type: string
        patronymic:
          type: string
